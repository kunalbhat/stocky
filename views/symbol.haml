%header.title-bar
  %nav#menu
    %a.return{ href: '/portfolio', target: '_self' }

.symbol-lookup-wrapper
  %form#symbol-lookup-form.symbol-lookup-form{ action: '/search', method: 'post' }
    %input{ autocapitalize: 'off', autocorrect: 'off', name: 'stock_symbol', placeholder: 'e.g. GOOG', type: 'text' }

%article.stock-detail
  %header{ class: "#{@symbol.status}" }
    %h3.company-name= @symbol.company
    %p.last-price
      = @symbol.last_price
    %span.change
      = @symbol.point_change
      = @symbol.percent_change

    - @cost_basis = @price_per_share.to_f * @shares_owned.to_f - @commission
    - @market_value = @symbol.last_price.to_f * @shares_owned.to_f - @commission
    - @gain = @market_value - @cost_basis

    %p Cost Basis: #{@cost_basis}
    %p Market Value: #{@market_value}
    %p Gain: #{@gain}

  %canvas{ class: 'symbol-chart', id: 'symbol-chart', height: '240', width: '320' }

%script{ src: '/javascripts/chart.min.js' }

:javascript
  var ctx = document.getElementById('symbol-chart').getContext('2d');

  var data = {
    labels : #{@symbol.last_prices_days.reverse},
    datasets : [
      {
        fillColor : "rgba(220,220,220,0.5)",
        strokeColor : "rgba(0,0,0,1)",
        data : #{@symbol.last_prices.reverse}
      }
    ]
  }

  var options = {
    bezierCurve : false,
    pointDot : false
  }

  var myNewChart = new Chart(ctx).Line(data, options);
